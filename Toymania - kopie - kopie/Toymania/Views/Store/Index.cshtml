@using PagedList;
@using PagedList.Mvc;


@model Toymania.ViewModels.BrowsePartial

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container container-body">
    @using (@Html.BeginForm("Index", "Store", FormMethod.Get))
    {

        @Html.TextBox("search") <input type="submit" value="search" />
        
        @*<button type="button" onclick="location.href='    @Url.Action("store", "Index", new { search = Request.QueryString["search"], C = ViewData["Category"],
                                                                                 SC = ViewData["SubCategory"], PC = ViewData["PriceCategory"] })'">Search</button>*@
        
        @*<input type="submit" value="search" onclick="location.href='@Url.Action("search", "Index", new { search = Request.QueryString["search"], C = ViewData["Category"], SC = ViewData["SubCategory"], PC = ViewData["PriceCategory"] })'" />*@
    }

    @*@Url.Action("search", "Index", new { search = Request.QueryString["search"], C = ViewData["Category"], SC = ViewData["SubCategory"], PC = ViewData["PriceCategory"] })*@

    <div class="col-md-12 categorien">
        @foreach (var item in Model.C)
        {

            <ul>
                <li> @Html.ActionLink(item.CName, "index", new { C = item.CName, PC = ViewData["PriceCategory"], ps = ViewData["PageSize"] }) </li>

            </ul>
        }
    </div>

    @*pagination met behulp van viewdata(default wordt geset op 30-> vervolgens bij verandering de viewdata aanpassen);*@
    <div class="Sidebar">
        <div class="filters col-md-12 PCT1">
            <p><strong>Price filters</strong></p>
            <li style="list-style:none">
                @Html.ActionLink("00.01 - 9,99 euro", "Index", new { C = ViewData["Category"], SC = ViewData["SubCategory"], PC = 1, ps = ViewData["PageSize"] }) <br />
                @Html.ActionLink("10,00 - 19,99 euro", "index", new { C = ViewData["Category"], SC = ViewData["SubCategory"], PC = 2, ps = ViewData["PageSize"] }) <br />
                @Html.ActionLink("20,00 - 49,99 euro", "index", new { C = ViewData["Category"], SC = ViewData["SubCategory"], PC = 3, ps = ViewData["PageSize"] }) <br />
                @Html.ActionLink("50,00 - 99,99 euro", "index", new { C = ViewData["Category"], SC = ViewData["SubCategory"], PC = 4, ps = ViewData["PageSize"] }) <br />
                @Html.ActionLink("100,00 - 499,99 euro", "index", new { C = ViewData["Category"], SC = ViewData["SubCategory"], PC = 5, ps = ViewData["PageSize"] }) <br />
                @Html.ActionLink("500,00+ euro", "index", new { C = ViewData["Category"], SC = ViewData["SubCategory"], PC = 6, ps = ViewData["PageSize"] }) <br />
            </li>
        </div>
        <div class="col-md-12 SCT1">
            <p><strong>Subcategories </strong></p>
            @if (Model.SC != null)
            {
                <div class="categorie">
                    @foreach (var item in Model.SC)
                    {
                        <div class="filters">
                            @Html.ActionLink(item.SCName, "index", new { C = ViewData["Category"], SC = item.SCName, PC = ViewData["PriceCategory"], ps = ViewData["PageSize"] })
                        </div>
                    }
                </div>
            }

        </div>
    </div>
    @if (Model.T != null)
    {
        <div class=" toymenu col-md-8">
            @foreach (var item in Model.T)
            {
            <div class="col-md-4">
                <p>

                    <img src="@Url.Content("~/Content/img/"+item.ItemArtUrl)" />
                </p>
                <p>
                    @Html.ActionLink(item.ToysName, "Details", new { id = item.ToysId })
                </p>
                <p>
                    <em>Price:</em>
                    @String.Format("{0:F} Euro", item.Price)
                </p>
                <p>
                    @Html.ActionLink("Add to cart", "ATC", "ShoppingCart", new { id = item.ToysId }, null)
                </p>
                <p>
                    @Html.ActionLink("Add to wishlist", "ATW", "WishlistManager", new { id = item.ToysId }, "")
                </p>

            </div>
            }
        </div>
    }
        <div>
            @Html.PagedListPager(Model.T, P => Url.Action("Index", new { P, C = ViewData["Category"], SC = ViewData["SubCategory"], PC = ViewData["PriceCategory"] }),
            new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true }
            )

            @Html.DropDownList("PS", new List<SelectListItem>
            {
                new SelectListItem{Text = "30", Value = "30", Selected = true},
                new SelectListItem{Text = "60", Value = "60"},
                new SelectListItem{Text = "90", Value = "30"},
                new SelectListItem{Text = "120", Value = "120"}
            })
        </div>
        @*<script src="~/Scripts/jquery-3.3.1.js"></script>
        <script>
            $(document).ready(function () {
                $("#PS").change(function () {
                    var v = $("#PS Option:Selected").text();
                    @Html.ViewData["PageSize"] = v;
                    @Html.Action("index", new { C = ViewData["Category"], SC = ViewData["SubCategory"], PC = ViewData["PriceCategory"], ps = ViewData["PageSize"] });

                });
            })
        </script>*@
</div>


